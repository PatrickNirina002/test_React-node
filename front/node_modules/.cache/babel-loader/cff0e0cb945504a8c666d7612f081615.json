{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Bureau/test/front/src/component/register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../action/authentification';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    };\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container registe\",\n      style: {\n        marginTop: '50px',\n        width: '700px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        marginBottom: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Registration\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.username\n      }),\n      name: \"username\",\n      onChange: this.handleInputChange,\n      value: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.email\n      }),\n      name: \"email\",\n      onChange: this.handleInputChange,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 39\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"mot de passe\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password\n      }),\n      name: \"password\",\n      onChange: this.handleInputChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 42\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"confirmer mo de passe\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password_confirm\n      }),\n      name: \"password_confirm\",\n      onChange: this.handleInputChange,\n      value: this.state.password_confirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), errors.password_confirm && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 50\n      }\n    }, errors.password_confirm)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Register User\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sitiregister\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/patrick/Bureau/test/front/src/component/register.js"],"names":["React","Component","connect","PropTypes","withRouter","registerUser","classnames","Register","constructor","state","username","email","password","password_confirm","errors","handleInputChange","bind","handleSubmit","e","setState","target","name","value","preventDefault","user","props","history","componentWillReceiveProps","nextProps","auth","isAuthenticated","push","componentDidMount","render","marginTop","width","marginBottom","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../action/authentification';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: '',          \n            password: '',\n            password_confirm: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirm: this.state.password_confirm\n        }\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n        return(\n        <div>\n        <div className=\"container registe\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Nom\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.username\n                    })}\n                    name=\"username\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.username }\n                    />\n                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"mot de passe\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"confirmer mo de passe\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password_confirm\n                    })}\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm }\n                    />\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </div >\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Register User\n                    </button>\n                </div>\n            </form>\n        </div>\n        <div className=\"sitiregister\"></div>\n        </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))"]},"metadata":{},"sourceType":"module"}