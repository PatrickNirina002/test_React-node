{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Bureau/test/front/src/component/login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../action/authentification';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(user);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/admin');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n      //     <h2 style={{marginBottom: '40px'}}>Login</h2>\n      //     <form onSubmit={ this.handleSubmit }>\n      //         <div className=\"form-group\">\n      //             <input\n      //             type=\"email\"\n      //             placeholder=\"Email\"\n      //             className={classnames('form-control form-control-lg', {\n      //                 'is-invalid': errors.email\n      //             })}\n      //             name=\"email\"\n      //             onChange={ this.handleInputChange }\n      //             value={ this.state.email }\n      //             />\n      //             {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n      //         </div>\n      //         <div className=\"form-group\">\n      //             <input\n      //             type=\"password\"\n      //             placeholder=\"Password\"\n      //             className={classnames('form-control form-control-lg', {\n      //                 'is-invalid': errors.password\n      //             })} \n      //             name=\"password\"\n      //             onChange={ this.handleInputChange }\n      //             value={ this.state.password }\n      //             />\n      //             {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n      //         </div>\n      //         <div className=\"form-group\">\n      //             <button type=\"submit\" className=\"btn btn-primary\">\n      //                 Login User\n      //             </button>\n      //         </div>\n      //     </form>\n      // </div>\n      React.createElement(\"div\", {\n        class: \"container h-100 log faran\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"d-flex justify-content-center h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"user_card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"d-flex justify-content-center form_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"input-group-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 56\n        }\n      }))), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control input_user\",\n        type: \"email\",\n        placeholder: \"Email\",\n        className: classnames('form-control form-control-lg', {\n          'is-invalid': errors.email\n        }),\n        name: \"email\",\n        onChange: this.handleInputChange,\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"input-group mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"input-group-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-key\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 56\n        }\n      }))), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control input_pass\",\n        type: \"password\",\n        placeholder: \"Password\",\n        className: classnames('form-control form-control-lg', {\n          'is-invalid': errors.password\n        }),\n        name: \"password\",\n        onChange: this.handleInputChange,\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"custom-control custom-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        class: \"custom-control-input\",\n        id: \"customControlInline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        class: \"custom-control-label\",\n        for: \"customControlInline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, \"Remember me\"))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"d-flex justify-content-center mt-3 login_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        name: \"button\",\n        class: \"btn login_btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \"Login\")))))))\n    );\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/patrick/Bureau/test/front/src/component/login.js"],"names":["React","Component","PropTypes","connect","loginUser","classnames","Login","constructor","state","email","password","errors","handleInputChange","bind","handleSubmit","e","setState","target","name","value","preventDefault","user","props","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../action/authentification';\nimport classnames from 'classnames';\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/admin');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n        return(\n        // <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n        //     <h2 style={{marginBottom: '40px'}}>Login</h2>\n        //     <form onSubmit={ this.handleSubmit }>\n        //         <div className=\"form-group\">\n        //             <input\n        //             type=\"email\"\n        //             placeholder=\"Email\"\n        //             className={classnames('form-control form-control-lg', {\n        //                 'is-invalid': errors.email\n        //             })}\n        //             name=\"email\"\n        //             onChange={ this.handleInputChange }\n        //             value={ this.state.email }\n        //             />\n        //             {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n        //         </div>\n        //         <div className=\"form-group\">\n        //             <input\n        //             type=\"password\"\n        //             placeholder=\"Password\"\n        //             className={classnames('form-control form-control-lg', {\n        //                 'is-invalid': errors.password\n        //             })} \n        //             name=\"password\"\n        //             onChange={ this.handleInputChange }\n        //             value={ this.state.password }\n        //             />\n        //             {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n        //         </div>\n        //         <div className=\"form-group\">\n        //             <button type=\"submit\" className=\"btn btn-primary\">\n        //                 Login User\n        //             </button>\n        //         </div>\n        //     </form>\n        // </div>\n\n\n<div class=\"container h-100 log faran\">\n<div class=\"d-flex justify-content-center h-100\">\n    <div class=\"user_card\">\n        <div class=\"d-flex justify-content-center form_container\">\n            <form onSubmit={ this.handleSubmit }>\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-append\">\n                        <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                    </div>\n                    <input  class=\"form-control input_user\" \n                      type=\"email\"\n                                  placeholder=\"Email\"\n                                  className={classnames('form-control form-control-lg', {\n                                      'is-invalid': errors.email\n                                  })}\n                                  name=\"email\"\n                                  onChange={ this.handleInputChange }\n                                  value={ this.state.email }/>\n                </div>\n                <div class=\"input-group mb-2\">\n                    <div class=\"input-group-append\">\n                        <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                    </div>\n                    <input  class=\"form-control input_pass\"\n                     type=\"password\"\n                                 placeholder=\"Password\"\n                                 className={classnames('form-control form-control-lg', {\n                                     'is-invalid': errors.password\n                                 })} \n                                 name=\"password\"\n                                 onChange={ this.handleInputChange }\n                                 value={ this.state.password } />\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\"/>\n                        <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center mt-3 login_container\">\n            <button type=\"submit\" name=\"button\" class=\"btn login_btn\">Login</button>\n            \n        </div>\n            </form>\n        </div>\n        \n      \n    </div>\n</div>\n</div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)\n"]},"metadata":{},"sourceType":"module"}